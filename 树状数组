const int maxn=100005;
ll tree[2][maxn];

//无法处理0,返回最低位1对应的值,如12即1100返回二进制100即4
ll lowbit(ll x){
    return x&(-x);
}
//单点修改
void update(ll x, ll value){//x表示修改点的下标，然后不断向上更新
    if(x<1)
        return;
    while(x<=20000){
        tree[1][x]+=value;
        tree[0][x]+=1;
        x+=lowbit(x);
    }
}
//查询
ll query(ll x,ll number){
    ll result = 0;
    while(x>0){
        result+=tree[number][x];
        x-=lowbit(x);
    }
    return result;
}
