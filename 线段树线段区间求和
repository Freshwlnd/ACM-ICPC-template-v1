const int maxsize=100000;
int segTree[4*maxsize+10];
int a[maxsize+2];
//创造线段树
int creattree(int node,int left,int right){
    if(left==right){segTree[node]=a[left];return segTree[node];}
    segTree[node] = creattree(node*2,left,(right+left)/2)+creattree(node*2+1,(left+right)/2+1,right);
    return segTree[node];
}
//更新单个节点
void updata(int node,int left,int right,int index,int add){
    if(left==right){segTree[node]+=add;return;}
    int m=(left+right)>>1;
    if(index<=m){updata(node*2,left,m,index,add);}
    else{updata(node*2+1,m+1,right,index,add);}
    segTree[node]+=add;
}
//询问
int query(int node,int left,int right,int s,int e){
    if(left>e||right<s)return 0;
    if(left>=s&&right<=e)return segTree[node];
    int sum=0;
    sum+=query(node*2,left,(left+right)/2,s,e)+query(node*2+1,(left+right)/2+1,right,s,e);//询问一段端点之和
    return sum;
}
